name: Release

on:
  push:
    tags:
      - 'v*'

jobs:
  linux:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install meson ninja
    - run: meson setup build/
      env:
        CC: gcc
    - run: meson compile -C build/
    - run: meson test -C build/ -v
    - run: |
        zip build/src/ engine 
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          asset_path: ./engine.zip
          asset_name: ecs-engine-linux.zip
          asset_content_type: application/zip

  macos:
    runs-on: macos-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: brew install gcc
    - run: pip install meson ninja
    - run: meson setup build/
      env:
        CC: gcc
    - run: meson compile -C build/
    - run: meson test -C build/ -v
    - run: |
        zip build/src/ engine 
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          asset_path: ./engine.zip
          asset_name: ecs-engine-macos.zip
          asset_content_type: application/zip

  windows:
    runs-on: windows-latest
    steps:
    - uses: actions/checkout@v1
    - uses: actions/setup-python@v1
      with:
        python-version: '3.x'
    - run: pip install meson ninja
    - uses: bus1/cabuild/action/msdevshell@v1
      with:
        architecture: x64
    - run: meson setup build
    - run: meson compile -v -C build
    - run: meson test -C build/ -v
    - run: |
        zip build/src/ engine.exe 
    - name: Create Release
      id: create_release
      uses: actions/create-release@v1
      with:
          tag_name: ${{ github.ref }}
          release_name: Release ${{ github.ref }}
          draft: false
          prerelease: false
    - name: Upload Release Asset
        id: upload-release-asset
        uses: actions/upload-release-asset@v1
        with:
          asset_path: ./engine.zip
          asset_name: ecs-engine-windows.zip
          asset_content_type: application/zip
